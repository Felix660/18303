%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 352 162 %%Title: (green.cvx) %%Creator: Canvas (X.0.2) %%CreationDate: (10/) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: %%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate true defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate true def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def/___FN4 /Symbol dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {2}{-1} ifelse end} {pop -1} ifelse rf/___FN2003 /Times-Italic dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN3 /Times-Roman dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf0 id1 fd0 162 translate300 -300 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 70 290 422 452 hs0 0 1463 673 rp 0 hcstm0.1367 0.0547 0.0273 0 f4np835.6232 408.4677 918.1427 601.4759 rpdertmstm0.1367 0.0547 0.0273 0 f4np920.1855 269.3317 1002.7051 601.8967 rpdertmstm0.1367 0.0547 0.0273 0 f4np1004.1979 217.0869 1086.7175 601.8967 rpdertmstm0.1367 0.0547 0.0273 0 f4np1086.5605 242.9343 1169.08 601.8967 rpdertmstm0.1367 0.0547 0.0273 0 f4np1170.0229 367.7718 1252.5425 601.8967 rpdertmstm0.1367 0.0547 0.0273 0 f4np1252.3855 483.8101 1334.9051 601.8967 rpdertmstm0.1953 0.1602 0.1758 0.0117 f44.1667 4.1667 sp14.3 lm 0 ljnp521.6027 101.1691 mt521.6027 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np918.9323 101.1691 mt918.9323 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np1002.088 101.1691 mt1002.088 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np1085.2437 101.1691 mt1085.2437 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np1168.3993 101.1691 mt1168.3993 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np1251.555 101.1691 mt1251.555 605.0635 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np1334.7107 101.1691 mt1334.7107 605.0635 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np20.9384 90.9256 mt25.105 90.9256 li25.105 603.5816 li20.9384 603.5816 li20.9384 90.9256 licpdfgs0.668 0.5781 0.6641 0.5039 f4np39.1981 101.7522 mt39.2489 101.7297 39.2748 101.7177 39.2748 101.7177 ct23.2691 55.1184 li23.2691 55.1185 9.8758 91.598 6.7693 101.4058 ct10.8746 97.2422 16.5665 94.6462 22.8165 94.6462 ct29.2381 94.6462 35.0704 97.3867 39.1981 101.7522 ctcpdegrrtmstm0.668 0.5781 0.6641 0.5039 f4np587.3626 599.4149 mt587.3626 603.5816 li20.9384 603.5816 li20.9384 599.4149 li587.3626 599.4149 licpdfgs0.668 0.5781 0.6641 0.5039 f4np576.5359 617.6746 mt576.5585 617.7254 576.5704 617.7513 576.5705 617.7513 ct623.1697 601.7456 li623.1697 601.7456 586.6901 588.3524 576.8823 585.2458 ct581.0459 589.3512 583.642 595.043 583.642 601.293 ct583.642 607.7146 580.9015 613.5469 576.5359 617.6746 ctcpdegrrtmstm0 0 0 1. f40 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa9.4583 658.9032 mt(0)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa623.9973 613.569 mt(x)  showT sartmrtmstm0.668 0.5781 0.6641 0.5039 f44.1667 4.1667 spnp23.1787 585.2889 mt23.1787 617.8539 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np522.1127 586.3549 mt522.1127 618.9199 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4F sa506.9617 658.9032 mt(L)  showT sartmrtmstm0.668 0.5781 0.6641 0.5039 f4np834.0463 92.2493 mt838.213 92.2493 li838.213 604.9053 li834.0463 604.9053 li834.0463 92.2493 licpdfgs0.668 0.5781 0.6641 0.5039 f4np852.306 103.076 mt852.3568 103.0535 852.3828 103.0415 852.3828 103.0414 ct836.377 56.4422 li836.377 56.4422 822.9838 92.9218 819.8773 102.7296 ct823.9826 98.566 829.6744 95.9699 835.9244 95.9699 ct842.3461 95.9699 848.1783 98.7104 852.306 103.076 ctcpdegrrtmstm0.668 0.5781 0.6641 0.5039 f4np1400.4705 600.7387 mt1400.4705 604.9053 li834.0463 604.9053 li834.0463 600.7387 li1400.4705 600.7387 licpdfgs0.668 0.5781 0.6641 0.5039 f4np1389.6439 618.9984 mt1389.6664 619.0492 1389.6784 619.0751 1389.6784 619.0751 ct1436.2777 603.0694 li1436.2776 603.0694 1399.798 589.6761 1389.9903 586.5696 ct1394.1539 590.6749 1396.7499 596.3668 1396.7499 602.6168 ct1396.7499 609.0384 1394.0094 614.8707 1389.6439 618.9984 ctcpdegrrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa822.5663 660.227 mt(0)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa1437.1053 614.8928 mt(x)  showT sartmrtmstm0.668 0.5781 0.6641 0.5039 f44.1667 4.1667 spnp836.2867 586.6127 mt836.2867 619.1777 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np919.4423 587.6787 mt919.4423 620.2437 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np1002.598 587.6787 mt1002.598 620.2437 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np1085.7537 587.6787 mt1085.7537 620.2437 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np1168.9093 587.6787 mt1168.9093 620.2437 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np1252.065 587.6787 mt1252.065 620.2437 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np1335.2207 587.6787 mt1335.2207 620.2437 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4F sa1320.0696 660.227 mt(L)  showT sartmrtmstm0 0 0 0 f4np22.0052 408.9303 mt22.0052 408.9303 89.8546 214.5509 214.5509 212.7171 ct339.2471 210.8833 407.0965 603.3097 518.9564 463.9433 ctde0.0352 0.9453 0.7734 0.0039 f44.1667 4.1667 spnp22.0052 408.9303 mt22.0052 408.9303 89.8546 214.5509 214.5509 212.7171 ct339.2471 210.8833 407.0965 603.3097 518.9564 463.9433 ctdsrtmstm0.0352 0.9453 0.7734 0.0039 f40.0352 0.9453 0.7734 0.0039 f4stm0.0352 0.9453 0.7734 0.0039 f4F sa0 37.5 mt(f)  showT sartm0.0352 0.9453 0.7734 0.0039 f44.1667 4.1667 sp0.0352 0.9453 0.7734 0.0039 f4stm50. fts/___FN3 cvsf0.0352 0.9453 0.7734 0.0039 f4F sa13.8916 37.5 mt(\()  showT sartm0.0352 0.9453 0.7734 0.0039 f44.1667 4.1667 sp0.0352 0.9453 0.7734 0.0039 f4stm50. fts/___FN2003 cvsf0.0352 0.9453 0.7734 0.0039 f4F sa30.542 37.5 mt(x)  showT sartm0.0352 0.9453 0.7734 0.0039 f44.1667 4.1667 sp0.0352 0.9453 0.7734 0.0039 f4stm50. fts/___FN3 cvsf0.0352 0.9453 0.7734 0.0039 f4F sa52.7344 37.5 mt(\))  showT sartmrtmstm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm50. fts/___FN2003 cvsf0.8984 0.6406 0.0078 0 f4F sa798.4378 38.8238 mt(f)  showT sartm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm37.5 fts/___FN2003 cvsf0.8984 0.6406 0.0078 0 f4F sa812.3294 55.4904 mt(N)  showT sartm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm50. fts/___FN3 cvsf0.8984 0.6406 0.0078 0 f4F sa837.3416 38.8238 mt(\()  showT sartm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm50. fts/___FN2003 cvsf0.8984 0.6406 0.0078 0 f4F sa853.992 38.8238 mt(x)  showT sartm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm50. fts/___FN3 cvsf0.8984 0.6406 0.0078 0 f4F sa876.1844 38.8238 mt(\))  showT sartmrtmstm0.0078 0.4531 0.4336 0 f44.1667 4.1667 spnp837.3129 410.254 mt837.3129 410.254 905.1624 215.8746 1029.8586 214.0409 ct1154.5548 212.2071 1222.4042 604.6335 1334.2641 465.2671 ctdsrtmstm0.8984 0.6406 0.0078 0 f4np836.8225 408.4677 mt919.3141 408.4677 lidsrtmstm0.8984 0.6406 0.0078 0 f4np919.185 270.3024 mt1001.6767 270.3024 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1002.6475 217.9286 mt1085.1392 217.9286 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1086.6599 243.0969 mt1169.1516 243.0969 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1169.5724 370.5549 mt1252.0641 370.5549 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1251.935 484.2643 mt1334.4267 484.2643 lidsrtmstm0.8984 0.6406 0.0078 0 f4np918.7642 268.7817 mt918.7642 281.2817 li918.7642 302.1151 mt918.7642 314.6151 li918.7642 335.4484 mt918.7642 347.9484 li918.7642 368.7817 mt918.7642 381.2817 li918.7642 402.1151 mt918.7642 410.1175 li918.7642 410.1175 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1002.2267 215.8579 mt1002.2267 228.3579 li1002.2267 249.1912 mt1002.2267 261.6912 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1168.1808 241.0262 mt1168.1808 253.5262 li1168.1808 274.3596 mt1168.1808 286.8596 li1168.1808 307.6929 mt1168.1808 320.1929 li1168.1808 341.0262 mt1168.1808 353.5262 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1251.0933 368.4843 mt1251.0933 380.9843 li1251.0933 401.8176 mt1251.0933 414.3176 li1251.0933 435.1509 mt1251.0933 447.6509 li1251.0933 468.4843 mt1251.0933 480.9843 lidsrtmstm0.8984 0.6406 0.0078 0 f4np1085.01 216.1496 mt1085.01 228.6496 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4np915.9405 656.221 mt908.3965 638.2035 li900.7427 656.221 li915.9405 656.221 licp921.0674 657.9056 mt898.1426 657.9056 li909.2205 632.3441 li909.9529 632.3441 li921.0674 657.9056 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa917.973 657.9056 mt(x)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np973.0099 657.4845 mt977.5126 652.8096 980.4986 649.457 982.1103 647.2672 ct983.7219 645.0774 984.5089 642.9925 984.5089 640.9134 ct984.5089 639.0927 984.0283 637.7378 983.0441 636.7844 ct982.0599 635.831 980.9123 635.3653 979.5468 635.3653 ct977.8614 635.3653 976.5275 635.9661 975.4818 637.1964 ct974.9036 637.873 974.3629 638.8884 973.8339 640.2909 ct973.0465 640.1261 li973.6617 637.2965 974.68 635.3769 976.1502 634.2759 ct977.6203 633.1748 979.1614 632.6371 980.8468 632.6371 ct982.9259 632.6371 984.5692 633.2769 985.8548 634.5871 ct987.1404 635.8973 987.7682 637.4625 987.7682 639.357 ct987.7682 641.3746 987.0893 643.2732 985.6991 645.1432 ct984.309 647.0131 981.359 650.2635 976.7086 655.0492 ct985.1132 655.0492 li986.2942 655.0492 987.1053 654.911 987.5851 654.628 ct988.0649 654.3451 988.5936 653.6722 989.1964 652.5772 ct989.6725 652.797 li987.64 657.9056 li973.0099 657.9056 li973.0099 657.4845 licpdertmstm0 0 0 1. f4np1011.5536 656.221 mt1004.0097 638.2035 li996.3559 656.221 li1011.5536 656.221 licp1016.6806 657.9056 mt993.7558 657.9056 li1004.8336 632.3441 li1005.5661 632.3441 li1016.6806 657.9056 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa1013.5861 657.9056 mt(x)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np1143.0878 648.4855 mt1143.0878 649.2851 1142.8014 649.9751 1142.215 650.5881 ct1141.6286 651.2012 1140.9257 651.5006 1140.0727 651.5006 ct1139.2375 651.5006 1138.5389 651.2099 1137.9436 650.6146 ct1137.3483 650.0193 1137.0576 649.3207 1137.0576 648.4855 ct1137.0576 647.6325 1137.3483 646.9209 1137.9436 646.3167 ct1138.5389 645.7125 1139.2375 645.4174 1140.0727 645.4174 ct1140.9079 645.4174 1141.6065 645.7125 1142.2018 646.3167 ct1142.7971 646.9209 1143.0878 647.6325 1143.0878 648.4855 ctcp1122.0348 645.4174 mt1122.7989 645.4174 1123.4758 645.6995 1124.0978 646.277 ct1124.7197 646.8546 1125.0235 647.5792 1125.0235 648.4855 ct1125.0235 649.3207 1124.7371 650.0193 1124.1507 650.6146 ct1123.5642 651.2099 1122.87 651.5006 1122.0348 651.5006 ct1121.164 651.5006 1120.4437 651.2142 1119.8395 650.6278 ct1119.2354 650.0414 1118.9403 649.3384 1118.9403 648.4855 ct1118.9403 647.6325 1119.2397 646.9209 1119.8528 646.3167 ct1120.4658 645.7125 1121.1818 645.4174 1122.0348 645.4174 ctcp1103.9704 645.4174 mt1104.8056 645.4174 1105.5042 645.7169 1106.0995 646.3299 ct1106.6948 646.943 1106.9855 647.6503 1106.9855 648.4855 ct1106.9855 649.2851 1106.6992 649.9751 1106.1127 650.5881 ct1105.5263 651.2012 1104.8234 651.5006 1103.9704 651.5006 ct1103.1352 651.5006 1102.4366 651.2099 1101.8413 650.6146 ct1101.246 650.0193 1100.9553 649.3207 1100.9553 648.4855 ct1100.9553 647.6325 1101.2417 646.9209 1101.8281 646.3167 ct1102.4145 645.7125 1103.1174 645.4174 1103.9704 645.4174 ctcpdertmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa1218.9807 657.9056 mt(N)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np1264.9035 656.221 mt1257.3596 638.2035 li1249.7058 656.221 li1264.9035 656.221 licp1270.0305 657.9056 mt1247.1057 657.9056 li1258.1836 632.3441 li1258.916 632.3441 li1270.0305 657.9056 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa1266.936 657.9056 mt(x)  showT sartmrtmstm0.8984 0.6406 0.0078 0 f48.3333 8.3333 sp14.3 lm 0 ljnp651.6129 338.3661 mt690.1455 311.7241 688.4517 364.232 727.8341 329.897 ctdsrtmstm0.8984 0.6406 0.0078 0 f4np652.6282 359.7071 mt691.1608 333.0651 689.467 385.573 728.8494 351.2381 ctdsrtmheterminate