%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 173 165 %%Title: (green.cvx) %%Creator: Canvas (X.0.2) %%CreationDate: (10/) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: %%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate true defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate true def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def/___FN4 /Symbol dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {2}{-1} ifelse end} {pop -1} ifelse rf/___FN2003 /Times-Italic dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN3 /Times-Roman dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf0 id1 fd0 165 translate300 -300 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 118 521 289 686 hs0 0 714 686 rp 0 hcstm0.1953 0.1602 0.1758 0.0117 f44.1667 4.1667 sp14.3 lm 0 ljnp335.3151 114.1591 mt335.3151 618.0535 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np418.4707 114.1591 mt418.4707 618.0535 lidsrtmstm0.1953 0.1602 0.1758 0.0117 f4np584.7821 114.1591 mt584.7821 618.0535 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np84.1177 105.2393 mt88.2844 105.2393 li88.2844 617.8953 li84.1177 617.8953 li84.1177 105.2393 licpdfgs0.668 0.5781 0.6641 0.5039 f4np102.3774 116.066 mt102.4282 116.0435 102.4542 116.0315 102.4542 116.0314 ct86.4484 69.4322 li86.4484 69.4322 73.0552 105.9118 69.9487 115.7196 ct74.054 111.556 79.7458 108.9599 85.9958 108.9599 ct92.4175 108.9599 98.2497 111.7004 102.3774 116.066 ctcpdegrrtmstm0.668 0.5781 0.6641 0.5039 f4np650.5419 613.7287 mt650.5419 617.8953 li84.1177 617.8953 li84.1177 613.7287 li650.5419 613.7287 licpdfgs0.668 0.5781 0.6641 0.5039 f4np639.7153 631.9884 mt639.7378 632.0392 639.7498 632.0651 639.7498 632.0651 ct686.3491 616.0594 li686.349 616.0594 649.8694 602.6661 640.0617 599.5596 ct644.2253 603.6649 646.8213 609.3568 646.8213 615.6068 ct646.8213 622.0284 644.0808 627.8607 639.7153 631.9884 ctcpdegrrtmstm0 0 0 1. f40 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa72.6377 673.217 mt(0)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa687.1767 627.8828 mt(x)  showT sartmrtmstm0.668 0.5781 0.6641 0.5039 f44.1667 4.1667 spnp86.3581 599.6027 mt86.3581 632.1677 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np169.5137 600.6687 mt169.5137 633.2337 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np252.6694 600.6687 mt252.6694 633.2337 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np335.8251 600.6687 mt335.8251 633.2337 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np418.9807 600.6687 mt418.9807 633.2337 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np502.1364 600.6687 mt502.1364 633.2337 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np585.2921 600.6687 mt585.2921 633.2337 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4F sa580.456 673.217 mt(L)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np166.0119 669.211 mt158.4679 651.1935 li150.8141 669.211 li166.0119 669.211 licp171.1388 670.8956 mt148.214 670.8956 li159.2919 645.3341 li160.0243 645.3341 li171.1388 670.8956 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa168.0444 670.8956 mt(x)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np266.7301 661.4755 mt266.7301 662.2751 266.4438 662.9651 265.8573 663.5781 ct265.2709 664.1912 264.568 664.4906 263.715 664.4906 ct262.8798 664.4906 262.1812 664.1999 261.5859 663.6046 ct260.9906 663.0093 260.6999 662.3107 260.6999 661.4755 ct260.6999 660.6225 260.9906 659.9109 261.5859 659.3067 ct262.1812 658.7025 262.8798 658.4074 263.715 658.4074 ct264.5502 658.4074 265.2488 658.7025 265.8441 659.3067 ct266.4394 659.9109 266.7301 660.6225 266.7301 661.4755 ctcp245.6771 658.4074 mt246.4412 658.4074 247.1181 658.6895 247.7401 659.267 ct248.362 659.8446 248.6658 660.5692 248.6658 661.4755 ct248.6658 662.3107 248.3794 663.0093 247.793 663.6046 ct247.2066 664.1999 246.5123 664.4906 245.6771 664.4906 ct244.8063 664.4906 244.086 664.2042 243.4818 663.6178 ct242.8777 663.0314 242.5826 662.3284 242.5826 661.4755 ct242.5826 660.6225 242.882 659.9109 243.4951 659.3067 ct244.1081 658.7025 244.8241 658.4074 245.6771 658.4074 ctcp227.6127 658.4074 mt228.4479 658.4074 229.1465 658.7069 229.7418 659.3199 ct230.3371 659.933 230.6278 660.6403 230.6278 661.4755 ct230.6278 662.2751 230.3415 662.9651 229.755 663.5781 ct229.1686 664.1912 228.4657 664.4906 227.6127 664.4906 ct226.7775 664.4906 226.0789 664.1999 225.4836 663.6046 ct224.8883 663.0093 224.5976 662.3107 224.5976 661.4755 ct224.5976 660.6225 224.884 659.9109 225.4704 659.3067 ct226.0568 658.7025 226.7597 658.4074 227.6127 658.4074 ctcpdertmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa297.5525 671.3025 mt(n)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np337.2131 669.6179 mt329.6692 651.6003 li322.0153 669.6179 li337.2131 669.6179 licp342.3401 671.3025 mt319.4152 671.3025 li330.4931 645.741 li331.2256 645.741 li342.3401 671.3025 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa339.2456 671.3025 mt(x)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np559.8289 661.8824 mt559.8289 662.682 559.5426 663.372 558.9561 663.985 ct558.3697 664.5981 557.6668 664.8975 556.8138 664.8975 ct555.9786 664.8975 555.28 664.6068 554.6847 664.0115 ct554.0894 663.4162 553.7987 662.7176 553.7987 661.8824 ct553.7987 661.0294 554.0894 660.3178 554.6847 659.7136 ct555.28 659.1094 555.9786 658.8143 556.8138 658.8143 ct557.649 658.8143 558.3476 659.1094 558.9429 659.7136 ct559.5382 660.3178 559.8289 661.0294 559.8289 661.8824 ctcp538.7759 658.8143 mt539.54 658.8143 540.2169 659.0964 540.8389 659.6739 ct541.4608 660.2514 541.7646 660.9761 541.7646 661.8824 ct541.7646 662.7176 541.4782 663.4162 540.8918 664.0115 ct540.3054 664.6068 539.6111 664.8975 538.7759 664.8975 ct537.9051 664.8975 537.1848 664.6111 536.5807 664.0247 ct535.9765 663.4383 535.6814 662.7353 535.6814 661.8824 ct535.6814 661.0294 535.9808 660.3178 536.5939 659.7136 ct537.2069 659.1094 537.9229 658.8143 538.7759 658.8143 ctcp520.7115 658.8143 mt521.5467 658.8143 522.2453 659.1137 522.8406 659.7268 ct523.4359 660.3399 523.7266 661.0472 523.7266 661.8824 ct523.7266 662.682 523.4403 663.372 522.8538 663.985 ct522.2674 664.5981 521.5645 664.8975 520.7115 664.8975 ct519.8763 664.8975 519.1777 664.6068 518.5824 664.0115 ct517.9871 663.4162 517.6964 662.7176 517.6964 661.8824 ct517.6964 661.0294 517.9828 660.3178 518.5692 659.7136 ct519.1556 659.1094 519.8585 658.8143 520.7115 658.8143 ctcpdertmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN3 cvsf0 0 0 1. f4F sa374.0374 671.7094 mt(\()  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa386.5252 671.7094 mt(n)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN3 cvsf0 0 0 1. f4F sa405.2752 671.7094 mt(+1\)) [21.15 18.75 0 ] xshowT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np478.5723 670.0248 mt471.0284 652.0072 li463.3746 670.0248 li478.5723 670.0248 licp483.6993 671.7094 mt460.7745 671.7094 li471.8523 646.1479 li472.5848 646.1479 li483.6993 671.7094 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa480.6048 671.7094 mt(x)  showT sartmrtmstm0.0078 0.25 0.2344 0 f4np335.4704 248.9457 418.8792 615.7306 rpde0.668 0.5781 0.6641 0.5039 f44.1667 4.1667 spnp335.4704 248.9457 418.8792 615.7306 rpdsrtmstm0 0 0 1. f40 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa362.3172 441.0609 mt(1)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np436.5226 234.4146 mt436.5882 234.4966 436.6242 234.5567 436.6324 234.5977 ct436.6406 234.6387 436.6446 234.7308 436.6446 234.8784 ct436.6446 264.273 li436.6446 265.536 436.9731 266.3211 437.6456 266.6655 ct438.3181 267.01 439.5438 267.2103 441.381 267.2759 ct441.381 267.9595 li427.6114 267.9595 li427.6114 267.2271 li429.5962 267.1287 430.8619 266.8643 431.4689 266.4214 ct432.0758 265.9785 432.3722 265.0412 432.3722 263.565 ct432.3722 240.9575 li432.3722 240.1702 432.276 239.5854 432.0792 239.1753 ct431.8824 238.7652 431.4658 238.565 430.8097 238.565 ct430.3832 238.565 429.8425 238.6811 429.1617 238.919 ct428.481 239.1568 427.8601 239.4011 427.2696 239.6636 ct427.2696 238.98 li436.2296 234.4146 li436.5226 234.4146 licpdertmstm0 0 0 1. f4np457.9337 234.1704 mt460.3751 234.1704 li449.3155 268.7896 li446.8253 268.7896 li457.9337 234.1704 licpdertmstm0 0 0 1. f4np488.5001 265.7134 mt478.4415 241.69 li468.2364 265.7134 li488.5001 265.7134 licp495.336 267.9595 mt464.7696 267.9595 li479.5401 233.8775 li480.5167 233.8775 li495.336 267.9595 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa491.2101 267.9595 mt(x)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN4 cvsfcurrentfont [1 0 -0.2588 1 0 0] makefont setfont0 0 0 1. f4F sa0 50.5 mt(d)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np45.6177 65.4821 mt38.0737 47.4645 li30.4199 65.4821 li45.6177 65.4821 licp50.7446 67.1667 mt27.8198 67.1667 li38.8977 41.6051 li39.6301 41.6051 li50.7446 67.1667 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm37.5 fts/___FN2003 cvsf0 0 0 1. f4F sa47.6501 67.1667 mt(x)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa64.2944 50.5 mt(\()  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa80.9448 50.5 mt(x)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np128.1128 38.0244 mt128.1128 40.4414 li103.0151 40.4414 li103.0151 38.0244 li128.1128 38.0244 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa128.1372 50.5 mt(n)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np181.0181 48.2539 mt170.9595 24.2305 li160.7544 48.2539 li181.0181 48.2539 licp187.854 50.5 mt157.2876 50.5 li172.0581 16.418 li173.0347 16.418 li187.854 50.5 licpdertm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN2003 cvsf0 0 0 1. f4F sa183.728 50.5 mt(x)  showT sartm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm50. fts/___FN3 cvsf0 0 0 1. f4F sa205.9204 50.5 mt(\))  showT sartmrtmstm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm0.8984 0.6406 0.0078 0 f4F sa198.2494 173.3202 mt(I)  showT sartmrtmstm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm0.8984 0.6406 0.0078 0 f4F sa359.1997 173.3202 mt(II) [16.65 0 ] xshowT sartmrtmstm0.8984 0.6406 0.0078 0 f44.1667 4.1667 sp0.8984 0.6406 0.0078 0 f4stm0.8984 0.6406 0.0078 0 f4F sa474.4096 173.3202 mt(III) [16.65 16.65 0 ] xshowT sartmrtmheterminate